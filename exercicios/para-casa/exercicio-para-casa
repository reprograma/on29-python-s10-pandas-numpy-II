{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyO6BuP7CWaBeJ9pdC4DZRZR",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/madubmello/on29-python-s10-pandas-numpy-II/blob/main/exercicios/para-casa/exercicio-para-casa\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 132,
      "metadata": {
        "id": "hChRFty6qNZc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "outputId": "b2896320-0f6f-428c-b4ea-177f751ba563"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Data  Hora UTC  PRECIPITAO TOTAL. HORARIO (mm)  \\\n",
              "0      2021/07/31  1100 UTC                             0.0   \n",
              "1      2020/01/16  0800 UTC                             0.0   \n",
              "2      2021/08/25  1900 UTC                             0.0   \n",
              "3      2021/08/02  1600 UTC                             0.0   \n",
              "4      2020/07/25  1400 UTC                             NaN   \n",
              "...           ...       ...                             ...   \n",
              "99995  2020/08/22  0300 UTC                             NaN   \n",
              "99996  2020/08/03  1900 UTC                             NaN   \n",
              "99997  2021/08/13  2200 UTC                             NaN   \n",
              "99998  2022/10/28  2100 UTC                             6.4   \n",
              "99999  2022/07/13  0700 UTC                             0.0   \n",
              "\n",
              "       PRESSAO ATMOSFERICA AO NIVEL DA ESTACAO. HORARIA (mB)  \\\n",
              "0                                                  925.4       \n",
              "1                                                  944.1       \n",
              "2                                                  899.4       \n",
              "3                                                  978.6       \n",
              "4                                                  932.8       \n",
              "...                                                  ...       \n",
              "99995                                                NaN       \n",
              "99996                                                NaN       \n",
              "99997                                                NaN       \n",
              "99998                                              957.2       \n",
              "99999                                              959.7       \n",
              "\n",
              "       PRESSAO ATMOSFERICA MAX.NA HORA ANT. (AUT) (mB)  \\\n",
              "0                                                925.6   \n",
              "1                                                944.1   \n",
              "2                                                899.7   \n",
              "3                                                979.5   \n",
              "4                                                932.9   \n",
              "...                                                ...   \n",
              "99995                                              NaN   \n",
              "99996                                              NaN   \n",
              "99997                                              NaN   \n",
              "99998                                            958.0   \n",
              "99999                                            959.7   \n",
              "\n",
              "       PRESSAO ATMOSFERICA MIN. NA HORA ANT. (AUT) (mB)  \\\n",
              "0                                                 925.0   \n",
              "1                                                 943.3   \n",
              "2                                                 899.3   \n",
              "3                                                 978.6   \n",
              "4                                                 932.8   \n",
              "...                                                 ...   \n",
              "99995                                               NaN   \n",
              "99996                                               NaN   \n",
              "99997                                               NaN   \n",
              "99998                                             957.1   \n",
              "99999                                             959.5   \n",
              "\n",
              "       RADIACAO GLOBAL (Kj/m2)  TEMPERATURA DO AR - BULBO SECO. HORARIA (C)  \\\n",
              "0                        312.6                                          8.0   \n",
              "1                          NaN                                         20.4   \n",
              "2                       1649.2                                         30.9   \n",
              "3                       2545.3                                         27.1   \n",
              "4                          NaN                                         25.6   \n",
              "...                        ...                                          ...   \n",
              "99995                      NaN                                          NaN   \n",
              "99996                      NaN                                          NaN   \n",
              "99997                      NaN                                          NaN   \n",
              "99998                    256.3                                         27.3   \n",
              "99999                      NaN                                         18.0   \n",
              "\n",
              "       TEMPERATURA DO PONTO DE ORVALHO (C)  \\\n",
              "0                                      3.8   \n",
              "1                                     19.3   \n",
              "2                                      1.3   \n",
              "3                                      7.5   \n",
              "4                                      9.2   \n",
              "...                                    ...   \n",
              "99995                                  NaN   \n",
              "99996                                  NaN   \n",
              "99997                                  NaN   \n",
              "99998                                 18.0   \n",
              "99999                                 13.6   \n",
              "\n",
              "       TEMPERATURA MAXIMA NA HORA ANT. (AUT) (C)  ...  \\\n",
              "0                                            8.0  ...   \n",
              "1                                           20.6  ...   \n",
              "2                                           31.6  ...   \n",
              "3                                           27.5  ...   \n",
              "4                                           25.8  ...   \n",
              "...                                          ...  ...   \n",
              "99995                                        NaN  ...   \n",
              "99996                                        NaN  ...   \n",
              "99997                                        NaN  ...   \n",
              "99998                                       28.5  ...   \n",
              "99999                                       18.9  ...   \n",
              "\n",
              "       VENTO. RAJADA MAXIMA (m/s)  VENTO. VELOCIDADE HORARIA (m/s)  REGIAO  \\\n",
              "0                             8.3                              2.8      SE   \n",
              "1                             1.9                              1.3      SE   \n",
              "2                             4.3                              0.7      SE   \n",
              "3                             5.8                              2.2      SE   \n",
              "4                             8.3                              3.6      SE   \n",
              "...                           ...                              ...     ...   \n",
              "99995                         NaN                              NaN      SE   \n",
              "99996                         NaN                              NaN      SE   \n",
              "99997                         NaN                              NaN      SE   \n",
              "99998                        10.6                              0.1      SE   \n",
              "99999                         3.5                              0.3      SE   \n",
              "\n",
              "       UF            ESTACAO  CODIGO (WMO)   LATITUDE  LONGITUDE  ALTITUDE  \\\n",
              "0      SP  BRAGANCA PAULISTA          A744 -22.951944 -46.530556    891.00   \n",
              "1      SP          ITUVERAVA          A753 -20.359722 -47.775278    610.58   \n",
              "2      SP             FRANCA          A708 -20.584444 -47.382500   1002.74   \n",
              "3      SP         VALPARAISO          A734 -21.319167 -50.930278    381.90   \n",
              "4      SP              AVARE          A725 -23.101667 -48.941111    776.36   \n",
              "...    ..                ...           ...        ...        ...       ...   \n",
              "99995  SP      SAO SEBASTIAO          A767 -23.810833 -45.402500     24.00   \n",
              "99996  SP           BEBDOURO          A764 -20.949167 -48.490000    790.00   \n",
              "99997  SP      SAO SEBASTIAO          A767 -23.810833 -45.402500     24.00   \n",
              "99998  SP               LINS          A727 -21.666111 -49.734722    460.65   \n",
              "99999  SP           IBITINGA          A737 -21.855556 -48.799722    496.75   \n",
              "\n",
              "      DATA DE FUNDACAO  \n",
              "0             20/12/17  \n",
              "1             17/07/08  \n",
              "2             12/12/02  \n",
              "3             30/08/07  \n",
              "4             22/09/06  \n",
              "...                ...  \n",
              "99995         25/10/17  \n",
              "99996         27/10/16  \n",
              "99997         25/10/17  \n",
              "99998         20/09/06  \n",
              "99999         09/11/07  \n",
              "\n",
              "[100000 rows x 27 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-166edaa1-296f-48d5-81ee-7a3b2cfa2ac0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Data</th>\n",
              "      <th>Hora UTC</th>\n",
              "      <th>PRECIPITAO TOTAL. HORARIO (mm)</th>\n",
              "      <th>PRESSAO ATMOSFERICA AO NIVEL DA ESTACAO. HORARIA (mB)</th>\n",
              "      <th>PRESSAO ATMOSFERICA MAX.NA HORA ANT. (AUT) (mB)</th>\n",
              "      <th>PRESSAO ATMOSFERICA MIN. NA HORA ANT. (AUT) (mB)</th>\n",
              "      <th>RADIACAO GLOBAL (Kj/m2)</th>\n",
              "      <th>TEMPERATURA DO AR - BULBO SECO. HORARIA (C)</th>\n",
              "      <th>TEMPERATURA DO PONTO DE ORVALHO (C)</th>\n",
              "      <th>TEMPERATURA MAXIMA NA HORA ANT. (AUT) (C)</th>\n",
              "      <th>...</th>\n",
              "      <th>VENTO. RAJADA MAXIMA (m/s)</th>\n",
              "      <th>VENTO. VELOCIDADE HORARIA (m/s)</th>\n",
              "      <th>REGIAO</th>\n",
              "      <th>UF</th>\n",
              "      <th>ESTACAO</th>\n",
              "      <th>CODIGO (WMO)</th>\n",
              "      <th>LATITUDE</th>\n",
              "      <th>LONGITUDE</th>\n",
              "      <th>ALTITUDE</th>\n",
              "      <th>DATA DE FUNDACAO</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021/07/31</td>\n",
              "      <td>1100 UTC</td>\n",
              "      <td>0.0</td>\n",
              "      <td>925.4</td>\n",
              "      <td>925.6</td>\n",
              "      <td>925.0</td>\n",
              "      <td>312.6</td>\n",
              "      <td>8.0</td>\n",
              "      <td>3.8</td>\n",
              "      <td>8.0</td>\n",
              "      <td>...</td>\n",
              "      <td>8.3</td>\n",
              "      <td>2.8</td>\n",
              "      <td>SE</td>\n",
              "      <td>SP</td>\n",
              "      <td>BRAGANCA PAULISTA</td>\n",
              "      <td>A744</td>\n",
              "      <td>-22.951944</td>\n",
              "      <td>-46.530556</td>\n",
              "      <td>891.00</td>\n",
              "      <td>20/12/17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2020/01/16</td>\n",
              "      <td>0800 UTC</td>\n",
              "      <td>0.0</td>\n",
              "      <td>944.1</td>\n",
              "      <td>944.1</td>\n",
              "      <td>943.3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>20.4</td>\n",
              "      <td>19.3</td>\n",
              "      <td>20.6</td>\n",
              "      <td>...</td>\n",
              "      <td>1.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>SE</td>\n",
              "      <td>SP</td>\n",
              "      <td>ITUVERAVA</td>\n",
              "      <td>A753</td>\n",
              "      <td>-20.359722</td>\n",
              "      <td>-47.775278</td>\n",
              "      <td>610.58</td>\n",
              "      <td>17/07/08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021/08/25</td>\n",
              "      <td>1900 UTC</td>\n",
              "      <td>0.0</td>\n",
              "      <td>899.4</td>\n",
              "      <td>899.7</td>\n",
              "      <td>899.3</td>\n",
              "      <td>1649.2</td>\n",
              "      <td>30.9</td>\n",
              "      <td>1.3</td>\n",
              "      <td>31.6</td>\n",
              "      <td>...</td>\n",
              "      <td>4.3</td>\n",
              "      <td>0.7</td>\n",
              "      <td>SE</td>\n",
              "      <td>SP</td>\n",
              "      <td>FRANCA</td>\n",
              "      <td>A708</td>\n",
              "      <td>-20.584444</td>\n",
              "      <td>-47.382500</td>\n",
              "      <td>1002.74</td>\n",
              "      <td>12/12/02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021/08/02</td>\n",
              "      <td>1600 UTC</td>\n",
              "      <td>0.0</td>\n",
              "      <td>978.6</td>\n",
              "      <td>979.5</td>\n",
              "      <td>978.6</td>\n",
              "      <td>2545.3</td>\n",
              "      <td>27.1</td>\n",
              "      <td>7.5</td>\n",
              "      <td>27.5</td>\n",
              "      <td>...</td>\n",
              "      <td>5.8</td>\n",
              "      <td>2.2</td>\n",
              "      <td>SE</td>\n",
              "      <td>SP</td>\n",
              "      <td>VALPARAISO</td>\n",
              "      <td>A734</td>\n",
              "      <td>-21.319167</td>\n",
              "      <td>-50.930278</td>\n",
              "      <td>381.90</td>\n",
              "      <td>30/08/07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2020/07/25</td>\n",
              "      <td>1400 UTC</td>\n",
              "      <td>NaN</td>\n",
              "      <td>932.8</td>\n",
              "      <td>932.9</td>\n",
              "      <td>932.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>25.6</td>\n",
              "      <td>9.2</td>\n",
              "      <td>25.8</td>\n",
              "      <td>...</td>\n",
              "      <td>8.3</td>\n",
              "      <td>3.6</td>\n",
              "      <td>SE</td>\n",
              "      <td>SP</td>\n",
              "      <td>AVARE</td>\n",
              "      <td>A725</td>\n",
              "      <td>-23.101667</td>\n",
              "      <td>-48.941111</td>\n",
              "      <td>776.36</td>\n",
              "      <td>22/09/06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99995</th>\n",
              "      <td>2020/08/22</td>\n",
              "      <td>0300 UTC</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SE</td>\n",
              "      <td>SP</td>\n",
              "      <td>SAO SEBASTIAO</td>\n",
              "      <td>A767</td>\n",
              "      <td>-23.810833</td>\n",
              "      <td>-45.402500</td>\n",
              "      <td>24.00</td>\n",
              "      <td>25/10/17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99996</th>\n",
              "      <td>2020/08/03</td>\n",
              "      <td>1900 UTC</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SE</td>\n",
              "      <td>SP</td>\n",
              "      <td>BEBDOURO</td>\n",
              "      <td>A764</td>\n",
              "      <td>-20.949167</td>\n",
              "      <td>-48.490000</td>\n",
              "      <td>790.00</td>\n",
              "      <td>27/10/16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99997</th>\n",
              "      <td>2021/08/13</td>\n",
              "      <td>2200 UTC</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>SE</td>\n",
              "      <td>SP</td>\n",
              "      <td>SAO SEBASTIAO</td>\n",
              "      <td>A767</td>\n",
              "      <td>-23.810833</td>\n",
              "      <td>-45.402500</td>\n",
              "      <td>24.00</td>\n",
              "      <td>25/10/17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99998</th>\n",
              "      <td>2022/10/28</td>\n",
              "      <td>2100 UTC</td>\n",
              "      <td>6.4</td>\n",
              "      <td>957.2</td>\n",
              "      <td>958.0</td>\n",
              "      <td>957.1</td>\n",
              "      <td>256.3</td>\n",
              "      <td>27.3</td>\n",
              "      <td>18.0</td>\n",
              "      <td>28.5</td>\n",
              "      <td>...</td>\n",
              "      <td>10.6</td>\n",
              "      <td>0.1</td>\n",
              "      <td>SE</td>\n",
              "      <td>SP</td>\n",
              "      <td>LINS</td>\n",
              "      <td>A727</td>\n",
              "      <td>-21.666111</td>\n",
              "      <td>-49.734722</td>\n",
              "      <td>460.65</td>\n",
              "      <td>20/09/06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99999</th>\n",
              "      <td>2022/07/13</td>\n",
              "      <td>0700 UTC</td>\n",
              "      <td>0.0</td>\n",
              "      <td>959.7</td>\n",
              "      <td>959.7</td>\n",
              "      <td>959.5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>18.0</td>\n",
              "      <td>13.6</td>\n",
              "      <td>18.9</td>\n",
              "      <td>...</td>\n",
              "      <td>3.5</td>\n",
              "      <td>0.3</td>\n",
              "      <td>SE</td>\n",
              "      <td>SP</td>\n",
              "      <td>IBITINGA</td>\n",
              "      <td>A737</td>\n",
              "      <td>-21.855556</td>\n",
              "      <td>-48.799722</td>\n",
              "      <td>496.75</td>\n",
              "      <td>09/11/07</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100000 rows × 27 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-166edaa1-296f-48d5-81ee-7a3b2cfa2ac0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-166edaa1-296f-48d5-81ee-7a3b2cfa2ac0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-166edaa1-296f-48d5-81ee-7a3b2cfa2ac0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ac3350dd-ab08-4040-b2c0-71ed3c7ba329\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ac3350dd-ab08-4040-b2c0-71ed3c7ba329')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ac3350dd-ab08-4040-b2c0-71ed3c7ba329 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_18620f07-7245-4b3f-8a71-64ef345a2e5d\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_18620f07-7245-4b3f-8a71-64ef345a2e5d button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 132
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "df = pd.read_csv('data_sample_SP.csv', sep=';', encoding='latin-1', on_bad_lines='skip')\n",
        "df"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###**Variação da média da temperatura e da rajada máxima de vento em SP durante o passar do dia**"
      ],
      "metadata": {
        "id": "Xp4oGqF9IEb3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.dropna(subset=['TEMPERATURA DO AR - BULBO SECO. HORARIA (C)', 'VENTO. RAJADA MAXIMA (m/s)'])\n",
        "\n",
        "hora = df['Hora UTC'].str.replace('00 UTC', ':00').to_numpy()\n",
        "temperatura = df['TEMPERATURA DO AR - BULBO SECO. HORARIA (C)'].to_numpy()\n",
        "vento = df['VENTO. RAJADA MAXIMA (m/s)'].to_numpy()\n",
        "\n",
        "df_calculoA = pd.DataFrame({'Hora': hora, 'Temperatura': temperatura, 'Vento': vento})\n",
        "dadosA = df_calculoA.groupby('Hora')[['Temperatura', 'Vento']].mean()\n",
        "\n",
        "dadosA.plot()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "rV7klsIOID9L",
        "outputId": "857fd3a5-9374-4610-da2a-90f2d5cba98b"
      },
      "execution_count": 133,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Hora'>"
            ]
          },
          "metadata": {},
          "execution_count": 133
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###**Visualização da média de temperatura em diferentes altitudes**"
      ],
      "metadata": {
        "id": "R-CCzUOvPMvn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.dropna(subset=['TEMPERATURA DO AR - BULBO SECO. HORARIA (C)'])\n",
        "\n",
        "altitude = df['ALTITUDE'].to_numpy()\n",
        "temperatura = df['TEMPERATURA DO AR - BULBO SECO. HORARIA (C)'].to_numpy()\n",
        "\n",
        "df_calculoB = pd.DataFrame({'Altitude': altitude, 'Temperatura': temperatura})\n",
        "dadosB = df_calculoB.groupby('Altitude')[['Temperatura']].mean()\n",
        "\n",
        "plt.plot(dadosB, 'bo')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "id": "gzUP7ar7Pdo9",
        "outputId": "53b62f35-8bec-418b-99eb-b5323d4fb07e"
      },
      "execution_count": 134,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7ce60f4da320>]"
            ]
          },
          "metadata": {},
          "execution_count": 134
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###**Variação da média da radiação solar em SP durante o passar do dia**"
      ],
      "metadata": {
        "id": "yrNkKteOSm78"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.dropna(subset=['RADIACAO GLOBAL (Kj/m2)'])\n",
        "\n",
        "hora = df['Hora UTC'].str.replace('00 UTC', ':00').to_numpy()\n",
        "radiacao = df['RADIACAO GLOBAL (Kj/m2)'].to_numpy()\n",
        "\n",
        "df_calculoC = pd.DataFrame({'Hora': hora, 'Radiação Solar (Kj/m2)': radiacao})\n",
        "dadosC = df_calculoC.groupby('Hora')[['Radiação Solar (Kj/m2)']].mean()\n",
        "\n",
        "dadosC.plot()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "giLrqhNnSb4x",
        "outputId": "e74021fb-ab59-4ef3-aeaf-115d697faf28"
      },
      "execution_count": 135,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Hora'>"
            ]
          },
          "metadata": {},
          "execution_count": 135
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}